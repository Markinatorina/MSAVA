// <auto-generated />
using System;
using System.Text.Json;
using M_SAVA_DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace M_SAVA_DAL.Migrations
{
    [DbContext(typeof(BaseDataContext))]
    [Migration("20250723080636_AccessGroupUserMtM")]
    partial class AccessGroupUserMtM
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AccessGroupDBUserDB", b =>
                {
                    b.Property<Guid>("AccessGroupsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uuid");

                    b.HasKey("AccessGroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("AccessGroupDBUserDB");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.AccessCodeDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaxUses")
                        .HasColumnType("integer");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("AccessCodes");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.AccessGroupDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AccessGroupDBId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccessGroupDBId");

                    b.HasIndex("OwnerId");

                    b.ToTable("AccessGroups");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.ErrorLogDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ErrorLogs");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.InviteCodeDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MaxUses")
                        .HasColumnType("integer");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("InviteCodes");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.JwtDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InviteCode")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhitelisted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TokenString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Jwts");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.SavedFileDataDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<string[]>("Categories")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DownloadCount")
                        .HasColumnType("bigint");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FileReferenceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("LastModifiedById")
                        .HasColumnType("uuid");

                    b.Property<JsonDocument>("Metadata")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<bool>("PublicViewing")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("SavedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("SizeInBytes")
                        .HasColumnType("numeric(20,0)");

                    b.PrimitiveCollection<string[]>("Tags")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("FileReferenceId");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("OwnerId");

                    b.ToTable("FileData");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.SavedFileReferenceDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccessGroupId")
                        .HasColumnType("uuid");

                    b.Property<short>("FileExtension")
                        .HasColumnType("smallint");

                    b.Property<byte[]>("FileHash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("bytea");

                    b.Property<bool>("PublicDownload")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AccessGroupId");

                    b.ToTable("FileRefs");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.UserDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InviteCode")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsWhitelisted")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AccessGroupDBUserDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.AccessGroupDB", null)
                        .WithMany()
                        .HasForeignKey("AccessGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("M_SAVA_DAL.Models.UserDB", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.AccessCodeDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.UserDB", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.AccessGroupDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.AccessGroupDB", null)
                        .WithMany("SubGroups")
                        .HasForeignKey("AccessGroupDBId");

                    b.HasOne("M_SAVA_DAL.Models.UserDB", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.ErrorLogDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.UserDB", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.InviteCodeDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.UserDB", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.JwtDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.UserDB", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.SavedFileDataDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.SavedFileReferenceDB", "FileReference")
                        .WithMany()
                        .HasForeignKey("FileReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("M_SAVA_DAL.Models.UserDB", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("M_SAVA_DAL.Models.UserDB", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileReference");

                    b.Navigation("LastModifiedBy");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.SavedFileReferenceDB", b =>
                {
                    b.HasOne("M_SAVA_DAL.Models.AccessGroupDB", "AccessGroup")
                        .WithMany()
                        .HasForeignKey("AccessGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccessGroup");
                });

            modelBuilder.Entity("M_SAVA_DAL.Models.AccessGroupDB", b =>
                {
                    b.Navigation("SubGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
